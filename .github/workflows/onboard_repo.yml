name: ⛵ Onboard repo
on:
  issues:
    types:
      - opened
      - edited

permissions:
  issues: write
  id-token: write
  contents: read

jobs:
  parse-issue:
    if: contains(github.event.issue.labels.*.name, 'Onboarding')
    runs-on: ubuntu-latest
    outputs:
      repoUrl: ${{ fromJson(steps.parse.outputs.parsed-issue).repo-url }}
      solutionAreas:
        ${{ toJson(fromJson(steps.parse.outputs.parsed-issue).solution-areas) }}
    steps:
      - uses: actions/checkout@v4
      - name: Issue form parser
        id: parse
        uses: edumserrano/github-issue-forms-parser@v1.3.7
        with:
          template-filepath: ".github/ISSUE_TEMPLATE/onboard_repo.yml"
          issue-form-body: "${{ github.event.issue.body }}"

      - name: Show parsed payload data
        run: |
          # Using the character `'` to prevent all characters enclosed within
          # them from being treated as special characters (e.g. $ or `)
          echo '${{ steps.parse.outputs.parsed-issue }}'

      - name: Comment with inputs
        if: github.event.action == 'opened' || github.event.action == 'edited'
        uses: peter-evans/create-or-update-comment@v3.0.2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            **Starting the onboarding of the repository following parameters:**
            Repo URL: ${{ fromJson(steps.parse.outputs.parsed-issue).repo-url }}
            Solution areas: 
            * Infrastructure: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.infrastructure && '✅' || '⛔' }}
            * Application Innovation: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.application-innovation && '✅' || '⛔' }}
            * Data & AI: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.data-ai && '✅' || '⛔' }}
            * Security: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.security && '✅' || '⛔' }}
            * Modern Workplace: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.modern-workplace && '✅' || '⛔' }}
            * Dynamics 365: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.dynamics-365 && '✅' || '⛔' }}
            * Other: ${{ fromJson(steps.parse.outputs.parsed-issue).solution-areas.other && '✅' || '⛔' }}

            **Next steps:**
            ⏭️ The repository is being added to the Belux Engineering Experience community. You will be notified when the process is finished.
